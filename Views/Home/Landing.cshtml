@{
    Layout = null;
    ViewData["Title"] = "Landing";
}

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>AeeT - Asset Entry/Exit Tracking System [Default]</title>

    <link rel="stylesheet" href="~/css/default.css">
    <link rel="stylesheet" href="~/css/default1.css">
    <link rel="stylesheet" href="~/css/default2.css">
    <link rel="stylesheet" href="~/css/site.css">
    <link rel="stylesheet" href="~/css/style.css">

    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <!-- Add QR Code library -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"></script>


    <script src="https://unpkg.com/html5-qrcode" type="text/javascript"></script>
</head>

<body>
    <nav class="navbar">
        <div class="nav-left">
            <div class="logo">
                <img src="~/images/nttdata_logo_.png" alt="NTT DATA Business Solutions">
            </div>
        </div>
        <div class="nav-right">
            <span id="currentTime" class="current-time">00:00:00</span>
            <div class="user-info">
                <span class="username" id="loggedInUserName"></span>
                <button type="button" class="logout-btn">
                    <i class="fas fa-sign-out-alt"></i>
                    <span>Logout</span>
                </button>
            </div>
        </div>
    </nav>

    <div class="SplashHeader_root__JxGNa" title="">
        <div class="placeholderShimmer"></div>
        <picture data-testid="picture">
            <img alt="" src="~/images/splashHeader.min.jpg" class="SplashHeader_image__eCNQN" decoding="async"
                loading="lazy">
        </picture>
        <div class="SplashHeader_content__QLLrO">
            <h1 class="SplashHeader_text__Gd7fp globalGreetingText" id="greetingText"></h1>
        </div>
    </div>

    <!-- Main Dashboard -->
    <div class="dashboard">
        <div class="dashboard-container">
            <div class="dashboard-grid">


                <!-- Scanner Button -->
                <button class="rolebased-action-btn" id="scanner-SA-AA-TO-Btn">
                    <div class="rolebased-action-icon">
                        <i class="fas fa-qrcode"></i>
                    </div>
                    <div class="rolebased-action-text">
                        <h3>Scanner</h3>
                        <p>Scan QR codes to log check-in/check-out</p>
                    </div>
                </button>

                <!-- The Scanner Modal -->
                <div id="scannerModal"
                    style="display: none; position: fixed; z-index: 999; top: 0; left: 0; width:100%; height:100%; background:rgba(0,0,0,0.5);">
                    <div
                        style="background:#fff; margin:50px auto; max-width:600px; border-radius:4px; padding:20px; position:relative;">
                        <h2><i class="fas fa-qrcode"></i> Scan QR Code</h2>
                        <button style="position:absolute; top:10px; right:10px;" onclick="stopScanner()">X</button>
                        <div style="border:1px solid #ccc; min-height:300px; margin-top:10px;" id="qrReader"></div>
                    </div>
                </div>

                <script>
                    // Global reference so we can pause/stop from onScanSuccess
                    let html5QrcodeScanner;

                    // Attach click event to the button
                    document.getElementById('scanner-SA-AA-TO-Btn')?.addEventListener('click', startScanner);

                    // Start the scanner: show the modal and render HTML5QrcodeScanner
                    function startScanner() {
                        try {
                            const modal = document.getElementById('scannerModal');
                            if (!modal) throw new Error('Scanner modal not found');

                            // Show the modal
                            modal.style.display = 'block';

                            // Create the scanner instance
                            html5QrcodeScanner = new Html5QrcodeScanner("qrReader", {
                                fps: 10,
                                qrbox: { width: 250, height: 250 },
                                aspectRatio: 1.0
                            });

                            // Render the scanner with callbacks
                            html5QrcodeScanner.render(onScanSuccess, onScanFailure);

                            console.log('Scanner started');
                        } catch (error) {
                            console.error('Failed to start scanner:', error);
                            alert('Failed to start scanner: ' + error.message);
                        }
                    }

                    // Stop scanning and hide the modal
                    function stopScanner() {
                        if (html5QrcodeScanner) {
                            html5QrcodeScanner.clear(); // or .pause(true) if you prefer
                        }
                        const modal = document.getElementById('scannerModal');
                        if (modal) {
                            modal.style.display = 'none';
                        }
                    }

                    // Called when a QR code is successfully decoded
                    async function onScanSuccess(decodedText, decodedResult) {
                        console.log("QR Code scanned successfully:", decodedText);
                        try {
                            // Optionally pause or stop scanning so it doesn't keep reading
                            if (html5QrcodeScanner) {
                                html5QrcodeScanner.pause(true);
                            }

                            // POST the scanned data to /Scanner/ProcessScan
                            const response = await fetch('/Scanner/ProcessScan', {
                                method: 'POST',
                                headers: { 'Content-Type': 'application/json' },
                                body: JSON.stringify({ ScannedData: decodedText })
                            });

                            if (!response.ok) {
                                throw new Error('Failed to send scan data to the server');
                            }

                            // Stop scanning & hide modal
                            stopScanner();

                            // Now redirect to /Scanner/Index so the user can see the scanned data
                            window.location.href = '/Scanner/Index';
                        } catch (error) {
                            console.error('Scan processing failed:', error);
                            alert('Failed to process scan: ' + error.message);
                        }
                    }

                    // Called on scan errors (fires often when scanning blank area)
                    function onScanFailure(error) {
                        // Filter out "No QR code found" if you don't want it in console
                        if (error && !error.includes("No QR code found")) {
                            console.warn('Scan error:', error);
                        }
                    }
                </script>



                <!-- Asset Logs Button -->
                <form asp-action="Index" asp-controller="AssetLogs" method="get">
                    <button type="submit" class="rolebased-action-btn">
                        <div class="rolebased-action-icon">
                            <i class="fas fa-history"></i>
                        </div>
                        <div class="rolebased-action-text">
                            <h3>Asset Logs</h3>
                            <p>View check-in/check-out logs</p>
                        </div>
                    </button>
                </form>

                <!-- ADD New Asset Button -->
                <form asp-controller="AddNewAsset" asp-action="Index" method="get">
                    <button type="submit" class="rolebased-action-btn">
                        <div class="rolebased-action-icon">
                            <i class="fas fa-plus-circle"></i>
                        </div>
                        <div class="rolebased-action-text">
                            <h3>Add New Asset</h3>
                            <p>Add new asset details to the system</p>
                        </div>
                    </button>
                </form>

                <!-- Map Asset Button -->
                <form asp-controller="MapAsset" asp-action="Index" method="get">
                    <button type="submit" class="rolebased-action-btn">
                        <div class="rolebased-action-icon">
                            <i class="fas fa-link"></i>
                        </div>
                        <div class="rolebased-action-text">
                            <h3>Map Asset</h3>
                            <p>Map Asset to resources</p>
                        </div>
                    </button>
                </form>

                <!-- Manage Users Button -->
                <form asp-controller="ManageUsers" asp-action="Index" method="get">
                    <button type="submit" class="rolebased-action-btn">
                        <div class="rolebased-action-icon">
                            <i class="fas fa-users"></i>
                        </div>
                        <div class="rolebased-action-text">
                            <h3>Manage Users</h3>
                            <p>Add, edit, or remove user accounts in AeeT Tool</p>
                        </div>
                    </button>
                </form>

                <!-- QR Generator Button -->
                <form asp-controller="QrGenerator" asp-action="Index" method="get">
                    <button type="submit" class="rolebased-action-btn" id="qrgenerator-SA-AA-Btn">
                        <div class="rolebased-action-icon">
                            <i class="fas fa-qrcode"></i>
                        </div>
                        <div class="rolebased-action-text">
                            <h3>QR Generator</h3>
                            <p>Generate QR codes for asset tracking</p>
                        </div>
                    </button>
                </form>



            <!-- Notification Container -->
            <div id="notificationContainer"></div>


            <script>
                document.addEventListener("DOMContentLoaded", function () {
    // Fetch user role from sessionStorage or API
    fetchUserRole();
});

function fetchUserRole() {
    fetch("/Dashboard/GetUserRole") // Call API to get user role
        .then(response => response.json())
        .then(data => {
            if (data.role) {
                configureDashboard(data.role);
            } else {
                console.error("Role not found");
            }
        })
        .catch(error => console.error("Error fetching role:", error));
}

function configureDashboard(role) {
    console.log("User Role:", role);

    // Hide all icons by default
    document.querySelectorAll(".rolebased-action-btn").forEach(btn => btn.style.display = "none");

    // Show all icons for Admin
    if (role === "Admin") {
        document.querySelectorAll(".rolebased-action-btn").forEach(btn => btn.style.display = "flex");
    }
    // Show specific icons for IT
    else if (role === "IT") {
        document.getElementById("scanner-SA-AA-TO-Btn").style.display = "flex"; // Scanner
        document.getElementById("assetlog-SA-AA-TO-Btn").style.display = "flex"; // Asset Logs
        document.getElementById("addnewasset-SA-Btn").style.display = "flex"; // Add New Asset
        document.getElementById("qrgenerator-SA-AA-Btn").style.display = "flex"; // qr genrator Asset
    }
    // Show specific icons for Security
    else if (role === "Security") {
        document.getElementById("scanner-SA-AA-TO-Btn").style.display = "flex"; // Scanner
        document.getElementById("assetlog-SA-AA-TO-Btn").style.display = "flex"; // Asset Logs
    }
}

document.addEventListener("DOMContentLoaded", function() {
    const logoutBtn = document.querySelector(".logout-btn");
    if (logoutBtn) {
        logoutBtn.addEventListener("click", function() {
            // Redirect to the logout action
            window.location.href = "/Account/Logout";
        });
    }
});

function updateTime() {
  document.getElementById("currentTime").textContent = new Date().toLocaleTimeString();
}
setInterval(updateTime, 1000);

function updateGreeting() {
  let h = new Date().getHours();
  document.getElementById("greetingText").textContent = h < 12 ? "Good Morning" : h < 18 ? "Good Afternoon" : "Good Evening";
}
updateGreeting();


            </script>



</body>

</html>